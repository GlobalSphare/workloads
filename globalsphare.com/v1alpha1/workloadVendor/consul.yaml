apiVersion: aam.globalsphare.com/v1alpha1
kind: WorkloadVendor
metadata:
  name: consul
spec: |
  import "mod/context"
  import "mod/auth"

  parameter: {
    image: string
    after?: string
  }

  construct: "\(context.componentName)-master-configmap": {
    apiVersion: "v1"
    kind: "ConfigMap"
    metadata: {
      name: "\(context.componentName)"
      namespace: context.namespace
      labels: {
        "app": "\(context.appName)"
        "component": "\(context.componentName)"
        "item": "\(context.componentName)"
      }
    }
    data: {
    }
  }

  construct: "\(context.componentName)-service-headless": {
    apiVersion: "v1"
    kind:       "Service"
    metadata: {
      name:      "\(context.componentName)-headless"
      namespace: context.namespace
      labels: {
        "app": context.appName
        "component": context.componentName
        "item": "\(context.componentName)"
      }
    }
    spec: {
      clusterIP: "None"
      ports: [{
        name: context.componentName
        port: 8500
      }]
      selector: {
        "app": context.appName
        "component": context.componentName
        "item": "\(context.componentName)"
      }
    }
  }


  construct: "\(context.componentName)-service": {
    apiVersion: "v1"
    kind:       "Service"
    metadata: {
      name:      "\(context.componentName)"
      namespace: context.namespace
      labels: {
        "app": context.appName
        "component": context.componentName
        "item": "\(context.componentName)"
      }
    }
    spec: {
      ports: [{
        name: context.componentName
        port: 8500
      }]
      selector: {
        "app": context.appName
        "component": context.componentName
        "item": "\(context.componentName)"
      }
    }
  }

  construct: "\(context.componentName)-service": {
    apiVersion: "v1"
    kind:       "Service"
    metadata: {
      name:      context.componentName
      namespace: context.namespace
      labels: {
        "app": context.appName
        "component": context.componentName
        "item": "\(context.componentName)"
      }
    }
    spec: {
      ports: [{
        name: "\(context.componentName)"
        port: 8500
      }]
      selector: {
        "app": "\(context.appName)"
        "component": "\(context.componentName)"
        "item": "\(context.componentName)"
      }
    }
  }

  construct: "\(context.componentName)-statefulset": {
    apiVersion: "apps/v1"
    kind:       "StatefulSet"
    metadata: {
      name:      "\(context.componentName)"
      namespace: "\(context.namespace)"
    }
    spec: {
      selector: matchLabels: {
        "app": "\(context.appName)"
        "component": "\(context.componentName)"
        "item": "\(context.componentName)"
      }
      serviceName: "\(context.componentName)-headless"
      replicas:    1
      template: {
        metadata: labels: {
          "app": "\(context.appName)"
          "component": "\(context.componentName)"
          "item": "\(context.componentName)"
        }
        spec: {
          serviceAccountName: context.appName
          if parameter["after"] != _|_ {
            initContainers: [
              {
                name: "init"
                image: parameter.image
                command: ["/bin/sh"]
                args: ["-c", "while true; do curl 'http://island-api.island-system/status/\(context.namespace)/\(parameter.after)' | grep '\"result\":1'; if [ $? -ne 0 ]; then sleep 4s; continue; else break; fi; done"]
              }
            ]
          }
          containers: [{
            name:  "\(context.componentName)"
            image: "harbor1.zlibs.com/cs/consul:1.7.1"
            env: []
            ports: [{
              containerPort: 8500
              name:          "consul"
            }]
            volumeMounts: []
            command: []
          },{
            name:  "\(context.componentName)-sidecar"
            image: "harbor1.zlibs.com/island/centos:7"
            command: ["/bin/sh", "-c", "while true; do resp=`curl -X PUT -H 'Content-Type: application/json' -d '{\"message\": \"部署成功\"}' http://island-api.island-system/status/\(context.namespace)/\(context.componentName)/1 | grep '\"code\":0' | wc -l `; if [[ $resp -ne 1 ]]; then sleep 30s; else sleep 3600d ; fi; done"]
          }]
          volumes: []
        }
      }
    }
  }